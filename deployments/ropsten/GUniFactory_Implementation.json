{
  "address": "0x677Ae9A616e940FAF43c7C672EE4C5471cCf2c35",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "uniPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "UpdatePoolImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isVerified",
          "type": "bool"
        }
      ],
      "name": "UpdateVerifyCreator",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PROXY_BYTECODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "uniFee",
          "type": "uint24"
        },
        {
          "internalType": "uint16",
          "name": "managerFee",
          "type": "uint16"
        },
        {
          "internalType": "int24",
          "name": "lowerTick",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "upperTick",
          "type": "int24"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployProps",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "getPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "getTokenOrder",
      "outputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_manager_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPoolCreator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "isPoolImmutable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVerifiedCreator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "poolProxyAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nextImplementation",
          "type": "address"
        }
      ],
      "name": "setPoolImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolCreator",
          "type": "address"
        }
      ],
      "name": "unverifyPoolCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        }
      ],
      "name": "upgradePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "datas",
          "type": "bytes[]"
        }
      ],
      "name": "upgradePoolsAndCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolCreator",
          "type": "address"
        }
      ],
      "name": "verifyPoolCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb94cc46222ae904ad689b686f9ea97e688fc7b3458f6b29006de2224fa15fd27",
  "receipt": {
    "to": null,
    "from": "0x4B5BaD436CcA8df3bD39A095b84991fAc9A226F1",
    "contractAddress": "0x677Ae9A616e940FAF43c7C672EE4C5471cCf2c35",
    "transactionIndex": 2,
    "gasUsed": "2120733",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xb7dfd0557725f12583bd293680f0110153c48b55df83583312f6fccec6ad0808",
    "transactionHash": "0xb94cc46222ae904ad689b686f9ea97e688fc7b3458f6b29006de2224fa15fd27",
    "logs": [],
    "blockNumber": 10519579,
    "cumulativeGasUsed": "2263996",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x273Edaa13C845F605b5886Dd66C89AB497A6B17b"],
  "solcInputHash": "98d5f5b0b481761cc5fe265b351302cc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"uniPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"UpdatePoolImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"name\":\"UpdateVerifyCreator\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PROXY_BYTECODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"uniFee\",\"type\":\"uint24\"},{\"internalType\":\"uint16\",\"name\":\"managerFee\",\"type\":\"uint16\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployProps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getTokenOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_manager_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPoolCreator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolImmutable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerifiedCreator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nextImplementation\",\"type\":\"address\"}],\"name\":\"setPoolImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"name\":\"unverifyPoolCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"}],\"name\":\"upgradePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"upgradePoolsAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"name\":\"verifyPoolCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"manager()\":{\"details\":\"Returns the address of the current manager.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without manager. It will not be possible to call `onlyManager` functions anymore. Can only be called by the current manager. NOTE: Renouncing ownership will leave the contract without an manager, thereby removing any functionality that is only available to the manager.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current manager.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GUniFactory.sol\":\"GUniFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"contracts/GUniFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport {\\n    IUniswapV3Factory\\n} from \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\nimport {IGUniFactory} from \\\"./interfaces/IGUniFactory.sol\\\";\\nimport {IGUniPoolStorage} from \\\"./interfaces/IGUniPoolStorage.sol\\\";\\nimport {GUniFactoryStorage} from \\\"./abstract/GUniFactoryStorage.sol\\\";\\nimport {GUniEIP173Proxy} from \\\"./vendor/proxy/GUniEIP173Proxy.sol\\\";\\nimport {IEIP173Proxy} from \\\"./interfaces/IEIP173Proxy.sol\\\";\\nimport {\\n    IERC20Metadata\\n} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ncontract GUniFactory is GUniFactoryStorage, IGUniFactory {\\n    bytes32 public constant PROXY_BYTECODE_HASH =\\n        keccak256(type(GUniEIP173Proxy).creationCode);\\n\\n    constructor(address _factory) GUniFactoryStorage(_factory) {} // solhint-disable-line no-empty-blocks, max-line-length\\n\\n    function getPoolAddress(\\n        address manager,\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address) {\\n        (address token0, address token1) = getTokenOrder(tokenA, tokenB);\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                bytes1(0xff),\\n                                address(this),\\n                                keccak256(\\n                                    abi.encodePacked(\\n                                        manager,\\n                                        token0,\\n                                        token1,\\n                                        fee\\n                                    )\\n                                ),\\n                                PROXY_BYTECODE_HASH\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    // solhint-disable-next-line function-max-lines\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 uniFee,\\n        uint16 managerFee,\\n        int24 lowerTick,\\n        int24 upperTick\\n    ) external override returns (address pool) {\\n        (address token0, address token1) = getTokenOrder(tokenA, tokenB);\\n\\n        _constructorParams = ConstructorParams({\\n            owner: address(this),\\n            implementation: poolImplementation\\n        });\\n\\n        pool = address(\\n            new GUniEIP173Proxy{\\n                salt: keccak256(\\n                    abi.encodePacked(msg.sender, token0, token1, uniFee)\\n                )\\n            }()\\n        );\\n\\n        string memory symbol0 = \\\"?\\\";\\n        string memory symbol1 = \\\"?\\\";\\n        try IERC20Metadata(token0).symbol() returns (string memory sym0) {\\n            symbol0 = sym0;\\n        } catch {} // solhint-disable-line no-empty-blocks\\n        try IERC20Metadata(token1).symbol() returns (string memory sym1) {\\n            symbol1 = sym1;\\n        } catch {} // solhint-disable-line no-empty-blocks\\n\\n        string memory name =\\n            _append(\\n                \\\"Gelato Uniswap V3 \\\",\\n                symbol0,\\n                \\\"/\\\",\\n                symbol1,\\n                \\\" LP 0x\\\",\\n                _getAddressFingerprint(msg.sender)\\n            );\\n\\n        address uniPool =\\n            IUniswapV3Factory(factory).getPool(token0, token1, uniFee);\\n\\n        IGUniPoolStorage(pool).initialize(\\n            name,\\n            \\\"G-UNI\\\",\\n            uniPool,\\n            managerFee,\\n            lowerTick,\\n            upperTick,\\n            msg.sender\\n        );\\n\\n        delete _constructorParams;\\n        isPoolCreator[msg.sender] = true;\\n        emit PoolCreated(uniPool, msg.sender, pool);\\n    }\\n\\n    function upgradePools(address[] memory pools) external onlyManager {\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            IEIP173Proxy(pools[i]).upgradeTo(poolImplementation);\\n        }\\n    }\\n\\n    function upgradePoolsAndCall(address[] memory pools, bytes[] calldata datas)\\n        external\\n        onlyManager\\n    {\\n        require(pools.length == datas.length, \\\"mismatching array length\\\");\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            IEIP173Proxy(pools[i]).upgradeToAndCall(\\n                poolImplementation,\\n                datas[i]\\n            );\\n        }\\n    }\\n\\n    function transferPools(address[] memory pools, address newAdmin)\\n        external\\n        onlyManager\\n    {\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            IEIP173Proxy(pools[i]).transferProxyAdmin(newAdmin);\\n        }\\n    }\\n\\n    function poolProxyAdmin(address pool) public view returns (address) {\\n        return IEIP173Proxy(pool).proxyAdmin();\\n    }\\n\\n    function isPoolImmutable(address pool) external view returns (bool) {\\n        return address(0) == poolProxyAdmin(pool);\\n    }\\n\\n    function getTokenOrder(address tokenA, address tokenB)\\n        public\\n        pure\\n        returns (address token0, address token1)\\n    {\\n        require(tokenA != tokenB, \\\"GUniFactory.createPool: same token\\\");\\n        (token0, token1) = tokenA < tokenB\\n            ? (tokenA, tokenB)\\n            : (tokenB, tokenA);\\n        require(\\n            token0 != address(0),\\n            \\\"GUniFactory.createPool: not address zero\\\"\\n        );\\n    }\\n\\n    function _getAddressFingerprint(address addr)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        bytes32 value = bytes32(uint256(uint160(addr)));\\n        bytes memory alphabet = \\\"0123456789abcdef\\\";\\n\\n        bytes memory str = new bytes(6);\\n        for (uint256 i = 0; i < 3; i++) {\\n            str[i * 2] = alphabet[uint256(uint8(value[i + 12] >> 4))];\\n            str[1 + i * 2] = alphabet[uint256(uint8(value[i + 12] & 0x0f))];\\n        }\\n        return string(str);\\n    }\\n\\n    function _append(\\n        string memory a,\\n        string memory b,\\n        string memory c,\\n        string memory d,\\n        string memory e,\\n        string memory f\\n    ) internal pure returns (string memory) {\\n        return string(abi.encodePacked(a, b, c, d, e, f));\\n    }\\n}\\n\",\"keccak256\":\"0xbb019b25c7523634d87905b997cf7b8c77ccb0b197f9b6c50bf632e3ba03074e\",\"license\":\"MIT\"},\"contracts/abstract/GUniFactoryStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport {IGUniFactoryStorage} from \\\"../interfaces/IGUniFactoryStorage.sol\\\";\\nimport {OwnableUninitialized} from \\\"./OwnableUninitialized.sol\\\";\\nimport {\\n    Initializable\\n} from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\n\\n// solhint-disable-next-line max-states-count\\ncontract GUniFactoryStorage is\\n    OwnableUninitialized, /* XXXX DONT MODIFY ORDERING XXXX */\\n    Initializable,\\n    IGUniFactoryStorage\\n    // APPEND ADDITIONAL BASE WITH STATE VARS BELOW:\\n    // XXXX DONT MODIFY ORDERING XXXX\\n{\\n    // XXXXXXXX DO NOT MODIFY ORDERING XXXXXXXX\\n    struct ConstructorParams {\\n        address owner;\\n        address implementation;\\n    }\\n\\n    ConstructorParams internal _constructorParams;\\n\\n    address public immutable override deployer;\\n    address public immutable factory;\\n    address public poolImplementation;\\n    mapping(address => bool) public isPoolCreator;\\n    mapping(address => bool) public isVerifiedCreator;\\n    // APPPEND ADDITIONAL STATE VARS BELOW:\\n    // XXXXXXXX DO NOT MODIFY ORDERING XXXXXXXX\\n\\n    event UpdatePoolImplementation(\\n        address previousImplementation,\\n        address newImplementation\\n    );\\n\\n    event UpdateVerifyCreator(address poolCreator, bool isVerified);\\n\\n    constructor(address _uniswapFactory) {\\n        factory = _uniswapFactory;\\n        deployer = msg.sender;\\n    }\\n\\n    function initialize(address _implementation, address _manager_)\\n        external\\n        override\\n        initializer\\n    {\\n        require(msg.sender == deployer, \\\"only deployer\\\");\\n        poolImplementation = _implementation;\\n        _manager = _manager_;\\n    }\\n\\n    function getDeployProps()\\n        external\\n        view\\n        override\\n        returns (address, address)\\n    {\\n        return (_constructorParams.owner, _constructorParams.implementation);\\n    }\\n\\n    function verifyPoolCreator(address poolCreator) external onlyManager {\\n        emit UpdateVerifyCreator(poolCreator, true);\\n        isVerifiedCreator[poolCreator] = true;\\n    }\\n\\n    function unverifyPoolCreator(address poolCreator) external onlyManager {\\n        emit UpdateVerifyCreator(poolCreator, false);\\n        isVerifiedCreator[poolCreator] = false;\\n    }\\n\\n    function setPoolImplementation(address nextImplementation)\\n        external\\n        onlyManager\\n    {\\n        emit UpdatePoolImplementation(poolImplementation, nextImplementation);\\n        poolImplementation = nextImplementation;\\n    }\\n}\\n\",\"keccak256\":\"0x3c590b0b18f547da284e6936a647a00d633c9ffa741b9b0333c5d2381096c553\",\"license\":\"MIT\"},\"contracts/abstract/OwnableUninitialized.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.4;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an manager) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the manager account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyManager`, which can be applied to your functions to restrict their use to\\n * the manager.\\n */\\n/// @dev DO NOT ADD STATE VARIABLES - APPEND THEM TO GelatoUniV3PoolStorage\\n/// @dev DO NOT ADD BASE CONTRACTS WITH STATE VARS - APPEND THEM TO GelatoUniV3PoolStorage\\nabstract contract OwnableUninitialized {\\n    address internal _manager;\\n\\n    event OwnershipTransferred(\\n        address indexed previousManager,\\n        address indexed newManager\\n    );\\n\\n    /// @dev Initializes the contract setting the deployer as the initial manager.\\n    /// CONSTRUCTOR EMPTY - USE INITIALIZIABLE INSTEAD\\n    // solhint-disable-next-line no-empty-blocks\\n    constructor() {}\\n\\n    /**\\n     * @dev Returns the address of the current manager.\\n     */\\n    function manager() public view virtual returns (address) {\\n        return _manager;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the manager.\\n     */\\n    modifier onlyManager() {\\n        require(manager() == msg.sender, \\\"Ownable: caller is not the manager\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without manager. It will not be possible to call\\n     * `onlyManager` functions anymore. Can only be called by the current manager.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an manager,\\n     * thereby removing any functionality that is only available to the manager.\\n     */\\n    function renounceOwnership() public virtual onlyManager {\\n        emit OwnershipTransferred(_manager, address(0));\\n        _manager = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current manager.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyManager {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new manager is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_manager, newOwner);\\n        _manager = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x81d888640e2261ac5189e6061a0cf4a7f3cec5994be1859ba60ffeb961f70c01\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IEIP173Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\ninterface IEIP173Proxy {\\n    function proxyAdmin() external view returns (address);\\n\\n    function transferProxyAdmin(address newAdmin) external;\\n\\n    function upgradeTo(address newImplementation) external;\\n\\n    function upgradeToAndCall(address newImplementation, bytes calldata data)\\n        external\\n        payable;\\n}\\n\",\"keccak256\":\"0x3ff5ed428adeaaa9ba05a91b4ccec7df22cd5de80a53a7bff109543bdebe1a68\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IGUniFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface IGUniFactory {\\n    event PoolCreated(\\n        address indexed uniPool,\\n        address indexed manager,\\n        address indexed pool\\n    );\\n\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 uniFee,\\n        uint16 managerFee,\\n        int24 lowerTick,\\n        int24 upperTick\\n    ) external returns (address pool);\\n}\\n\",\"keccak256\":\"0xd3a394c8b7a3961b2c0420b846dbaa35739f28be9ea300bbf084d62c23a92e03\",\"license\":\"MIT\"},\"contracts/interfaces/IGUniFactoryStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface IGUniFactoryStorage {\\n    function deployer() external view returns (address);\\n\\n    function initialize(address _implementation, address _owner_) external;\\n\\n    function getDeployProps() external view returns (address, address);\\n}\\n\",\"keccak256\":\"0xc43cee1c03225f2ce7716baeab0048bdd780452d7f07c4ee39bc4cc821138e6d\",\"license\":\"MIT\"},\"contracts/interfaces/IGUniPoolStorage.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\ninterface IGUniPoolStorage {\\n    function initialize(\\n        string memory _name,\\n        string memory _symbol,\\n        address _pool,\\n        uint16 _managerFeeBPS,\\n        int24 _lowerTick,\\n        int24 _upperTick,\\n        address _manager_\\n    ) external;\\n}\\n\",\"keccak256\":\"0x39f4bc4e8684c9674e1967a3ac4ea5531f45492266586c4e6e9eb2f6d9108ced\",\"license\":\"GPL-3.0\"},\"contracts/vendor/proxy/GUniEIP173Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\nimport \\\"./Proxy.sol\\\";\\nimport {IGUniFactoryStorage} from \\\"../../interfaces/IGUniFactoryStorage.sol\\\";\\n\\ninterface ERC165 {\\n    function supportsInterface(bytes4 id) external view returns (bool);\\n}\\n\\n///@notice Proxy implementing EIP173 for ownership management\\ncontract GUniEIP173Proxy is Proxy {\\n    // ////////////////////////// EVENTS ///////////////////////////////////////////////////////////////////////\\n\\n    event ProxyAdminTransferred(\\n        address indexed previousAdmin,\\n        address indexed newAdmin\\n    );\\n\\n    // /////////////////////// CONSTRUCTOR //////////////////////////////////////////////////////////////////////\\n    constructor() payable {\\n        (address admin, address implementation) =\\n            IGUniFactoryStorage(msg.sender).getDeployProps();\\n        _setImplementation(implementation, \\\"\\\");\\n        _setProxyAdmin(admin);\\n    }\\n\\n    // ///////////////////// EXTERNAL ///////////////////////////////////////////////////////////////////////////\\n\\n    function proxyAdmin() external view returns (address) {\\n        return _proxyAdmin();\\n    }\\n\\n    function supportsInterface(bytes4 id) external view returns (bool) {\\n        if (id == 0x01ffc9a7 || id == 0x7f5828d0) {\\n            return true;\\n        }\\n        if (id == 0xFFFFFFFF) {\\n            return false;\\n        }\\n\\n        ERC165 implementation;\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            implementation := sload(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\\n            )\\n        }\\n\\n        // Technically this is not standard compliant as ERC-165 require 30,000 gas which that call cannot ensure\\n        // because it is itself inside `supportsInterface` that might only get 30,000 gas.\\n        // In practise this is unlikely to be an issue.\\n        try implementation.supportsInterface(id) returns (bool support) {\\n            return support;\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    function transferProxyAdmin(address newAdmin) external onlyProxyAdmin {\\n        _setProxyAdmin(newAdmin);\\n    }\\n\\n    function upgradeTo(address newImplementation) external onlyProxyAdmin {\\n        _setImplementation(newImplementation, \\\"\\\");\\n    }\\n\\n    function upgradeToAndCall(address newImplementation, bytes calldata data)\\n        external\\n        payable\\n        onlyProxyAdmin\\n    {\\n        _setImplementation(newImplementation, data);\\n    }\\n\\n    // /////////////////////// MODIFIERS ////////////////////////////////////////////////////////////////////////\\n\\n    modifier onlyProxyAdmin() {\\n        require(msg.sender == _proxyAdmin(), \\\"NOT_AUTHORIZED\\\");\\n        _;\\n    }\\n\\n    // ///////////////////////// INTERNAL //////////////////////////////////////////////////////////////////////\\n\\n    function _proxyAdmin() internal view returns (address adminAddress) {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            adminAddress := sload(\\n                0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\\n            )\\n        }\\n    }\\n\\n    function _setProxyAdmin(address newAdmin) internal {\\n        address previousAdmin = _proxyAdmin();\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            sstore(\\n                0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103,\\n                newAdmin\\n            )\\n        }\\n        emit ProxyAdminTransferred(previousAdmin, newAdmin);\\n    }\\n}\\n\",\"keccak256\":\"0xd921400216262d9dfbd0ebc11145b97aebe4ae49a6ad30373a617bb8a10750cb\",\"license\":\"GPL-3.0\"},\"contracts/vendor/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\n// EIP-1967\\nabstract contract Proxy {\\n    // /////////////////////// EVENTS ///////////////////////////////////////////////////////////////////////////\\n\\n    event ProxyImplementationUpdated(\\n        address indexed previousImplementation,\\n        address indexed newImplementation\\n    );\\n\\n    // ///////////////////// EXTERNAL ///////////////////////////////////////////////////////////////////////////\\n\\n    // prettier-ignore\\n    receive() external payable virtual {\\n        revert(\\\"ETHER_REJECTED\\\"); // explicit reject by default\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    // ///////////////////////// INTERNAL //////////////////////////////////////////////////////////////////////\\n\\n    function _fallback() internal {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            let implementationAddress := sload(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\\n            )\\n            calldatacopy(0x0, 0x0, calldatasize())\\n            let success := delegatecall(\\n                gas(),\\n                implementationAddress,\\n                0x0,\\n                calldatasize(),\\n                0,\\n                0\\n            )\\n            let retSz := returndatasize()\\n            returndatacopy(0, 0, retSz)\\n            switch success\\n                case 0 {\\n                    revert(0, retSz)\\n                }\\n                default {\\n                    return(0, retSz)\\n                }\\n        }\\n    }\\n\\n    function _setImplementation(address newImplementation, bytes memory data)\\n        internal\\n    {\\n        address previousImplementation;\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            previousImplementation := sload(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\\n            )\\n        }\\n\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            sstore(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc,\\n                newImplementation\\n            )\\n        }\\n\\n        emit ProxyImplementationUpdated(\\n            previousImplementation,\\n            newImplementation\\n        );\\n\\n        if (data.length > 0) {\\n            (bool success, ) = newImplementation.delegatecall(data);\\n            if (!success) {\\n                assembly {\\n                    // This assembly ensure the revert contains the exact string data\\n                    let returnDataSize := returndatasize()\\n                    returndatacopy(0, 0, returnDataSize)\\n                    revert(0, returnDataSize)\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x00dbb59cf486ff9a2930fb588ef70d761dbf439aa05d48ef0001a0448769ec11\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161262738038061262783398101604081905261002f9161004c565b6001600160601b0319606091821b1660a05233901b60805261007a565b60006020828403121561005d578081fd5b81516001600160a01b0381168114610073578182fd5b9392505050565b60805160601c60a05160601c6125746100b3600039600081816102e50152610cb20152600081816103210152610edb01526125746000f3fe60806040523480156200001157600080fd5b5060043610620001295760003560e01c8062599e65146200012e5780630be63aac146200015e5780630dfc574b1462000177578063173f4c30146200018e57806334862b6a14620001a55780633522826414620001be57806340aee04114620001e4578063479dbe1d14620001fb578063481c6a751462000212578063483248ca146200021c578063485cc955146200023357806350dcf827146200024a578063715018a6146200028157806395d807f1146200028b5780639a94775d14620002a2578063a58f121914620002c8578063c45a015514620002df578063cefa77991462000307578063d5f39488146200031b578063d6f748981462000343578063f2fde38b146200035a578063fff471bd1462000371575b600080fd5b620001456200013f3660046200154a565b6200038a565b604051620001559291906200190b565b60405180910390f35b620001756200016f366004620016b2565b6200049a565b005b6200017562000188366004620016fc565b62000580565b620001756200019f36600462001505565b62000700565b620001af62000783565b60405190815260200162000155565b620001d5620001cf36600462001587565b620007b2565b604051620001559190620018f7565b62000175620001f536600462001674565b6200088f565b620001756200020c36600462001505565b6200097d565b620001d5620009fd565b620001d56200022d366004620015e9565b62000a0c565b62000175620002443660046200154a565b62000e1d565b620002706200025b36600462001505565b60056020526000908152604090205460ff1681565b604051901515815260200162000155565b6200017562000f83565b620002706200029c36600462001505565b62000ff0565b62000270620002b336600462001505565b60046020526000908152604090205460ff1681565b620001d5620002d936600462001505565b6200100d565b620001d57f000000000000000000000000000000000000000000000000000000000000000081565b600354620001d5906001600160a01b031681565b620001d57f000000000000000000000000000000000000000000000000000000000000000081565b620001756200035436600462001505565b6200108a565b620001756200036b36600462001505565b62001129565b6001546002546001600160a01b03918216911662000145565b600080826001600160a01b0316846001600160a01b03161415620004005760405162461bcd60e51b815260206004820152602260248201527f47556e69466163746f72792e637265617465506f6f6c3a2073616d6520746f6b60448201526132b760f11b60648201526084015b60405180910390fd5b826001600160a01b0316846001600160a01b0316106200042257828462000425565b83835b90925090506001600160a01b038216620004935760405162461bcd60e51b815260206004820152602860248201527f47556e69466163746f72792e637265617465506f6f6c3a206e6f742061646472604482015267657373207a65726f60c01b6064820152608401620003f7565b9250929050565b33620004a5620009fd565b6001600160a01b031614620004ce5760405162461bcd60e51b8152600401620003f79062001a2a565b60005b82518110156200057b57828181518110620004fc57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316638356ca4f836040518263ffffffff1660e01b8152600401620005319190620018f7565b600060405180830381600087803b1580156200054c57600080fd5b505af115801562000561573d6000803e3d6000fd5b505050508080620005729062001b52565b915050620004d1565b505050565b336200058b620009fd565b6001600160a01b031614620005b45760405162461bcd60e51b8152600401620003f79062001a2a565b82518114620006015760405162461bcd60e51b81526020600482015260186024820152770dad2e6dac2e8c6d0d2dcce40c2e4e4c2f240d8cadccee8d60431b6044820152606401620003f7565b60005b8351811015620006fa578381815181106200062f57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316634f1ef286600360009054906101000a90046001600160a01b03168585858181106200067c57634e487b7160e01b600052603260045260246000fd5b905060200281019062000690919062001a6c565b6040518463ffffffff1660e01b8152600401620006b09392919062001940565b600060405180830381600087803b158015620006cb57600080fd5b505af1158015620006e0573d6000803e3d6000fd5b505050508080620006f19062001b52565b91505062000604565b50505050565b336200070b620009fd565b6001600160a01b031614620007345760405162461bcd60e51b8152600401620003f79062001a2a565b600080516020620024ff8339815191528160016040516200075792919062001925565b60405180910390a16001600160a01b03166000908152600560205260409020805460ff19166001179055565b604051620007946020820162001435565b6020820181038252601f19601f820116604052508051906020012081565b6000806000620007c386866200038a565b9150915060ff60f81b3088848488604051602001620007e6949392919062001828565b60405160208183030381529060405280519060200120604051806020016200080e9062001435565b6020820181038252601f19601f82011660405250805190602001206040516020016200086c94939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051601f198184030181529190528051602090910120979650505050505050565b336200089a620009fd565b6001600160a01b031614620008c35760405162461bcd60e51b8152600401620003f79062001a2a565b60005b81518110156200097957818181518110620008f157634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600354604051631b2ce7f360e11b81526001600160a01b0392831692633659cfe6926200092f92911690600401620018f7565b600060405180830381600087803b1580156200094a57600080fd5b505af11580156200095f573d6000803e3d6000fd5b505050508080620009709062001b52565b915050620008c6565b5050565b3362000988620009fd565b6001600160a01b031614620009b15760405162461bcd60e51b8152600401620003f79062001a2a565b600080516020620024ff833981519152816000604051620009d492919062001925565b60405180910390a16001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b031690565b600080600062000a1d89896200038a565b604080518082018252308082526003546001600160a01b03166020928301819052600180546001600160a01b0319908116909317905560028054909216179055905192945090925062000a79913391859185918c910162001828565b6040516020818303038152906040528051906020012060405162000a9d9062001435565b8190604051809103906000f590508015801562000abe573d6000803e3d6000fd5b5092506000604051806040016040528060018152602001603f60f81b81525090506000604051806040016040528060018152602001603f60f81b8152509050836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562000b3757600080fd5b505afa92505050801562000b6f57506040513d6000823e601f3d908101601f1916820160405262000b6c919081019062001797565b60015b62000b7a5762000b7d565b91505b826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562000bb757600080fd5b505afa92505050801562000bef57506040513d6000823e601f3d908101601f1916820160405262000bec919081019062001797565b60015b62000bfa5762000bfd565b90505b600062000c7a60405180604001604052806012815260200171023b2b630ba37902ab734b9bbb0b8102b19960751b81525084604051806040016040528060018152602001602f60f81b815250856040518060400160405280600681526020016504098a04060f60d31b81525062000c743362001210565b620013fb565b604051630b4c774160e11b81526001600160a01b038781166004830152868116602483015262ffffff8d1660448301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690631698ee829060640160206040518083038186803b15801562000cf557600080fd5b505afa15801562000d0a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d3091906200152b565b60405163e25e15e360e01b81529091506001600160a01b0388169063e25e15e39062000d6b90859085908f908f908f90339060040162001980565b600060405180830381600087803b15801562000d8657600080fd5b505af115801562000d9b573d6000803e3d6000fd5b5050600180546001600160a01b0319908116825560028054909116905533600081815260046020526040808220805460ff191690941790935591516001600160a01b038c81169550919350908516917f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b91a45050505050509695505050505050565b600054600160a81b900460ff168062000e405750600054600160a01b900460ff16155b62000ea55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620003f7565b600054600160a81b900460ff1615801562000ed0576000805461ffff60a01b191661010160a01b1790555b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000f3a5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903232b83637bcb2b960991b6044820152606401620003f7565b600380546001600160a01b038086166001600160a01b031992831617909255600080549285169290911691909117905580156200057b576000805460ff60a81b19169055505050565b3362000f8e620009fd565b6001600160a01b03161462000fb75760405162461bcd60e51b8152600401620003f79062001a2a565b600080546040516001600160a01b03909116906000805160206200251f833981519152908390a3600080546001600160a01b0319169055565b600062000ffd826200100d565b6001600160a01b03161592915050565b6000816001600160a01b0316633e47158c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200104957600080fd5b505afa1580156200105e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200108491906200152b565b92915050565b3362001095620009fd565b6001600160a01b031614620010be5760405162461bcd60e51b8152600401620003f79062001a2a565b6003546040517f0617fd31aa5ab95ec80eefc1eb61a2c477aa419d1d761b4e46f5f077e47852aa91620010ff916001600160a01b039091169084906200190b565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b3362001134620009fd565b6001600160a01b0316146200115d5760405162461bcd60e51b8152600401620003f79062001a2a565b6001600160a01b038116620011c65760405162461bcd60e51b815260206004820152602860248201527f4f776e61626c653a206e6577206d616e6167657220697320746865207a65726f604482015267206164647265737360c01b6064820152608401620003f7565b600080546040516001600160a01b03808516939216916000805160206200251f83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b6020820152815160068082528184019093526060926001600160a01b038516929160009160208201818036833701905050905060005b6003811015620013f257826004856200128284600c62001ae6565b60208110620012a157634e487b7160e01b600052603260045260246000fd5b1a60f81b6001600160f81b031916901c60f81c60ff1681518110620012d657634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191682620012f383600262001b01565b815181106200131257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535082846200133883600c62001ae6565b602081106200135757634e487b7160e01b600052603260045260246000fd5b825191901a600f169081106200137d57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b031916826200139a83600262001b01565b620013a790600162001ae6565b81518110620013c657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535080620013e98162001b52565b91505062001267565b50949350505050565b60608686868686866040516020016200141a969594939291906200186c565b60405160208183030381529060405290509695505050505050565b6109498062001bb683390190565b600082601f83011262001454578081fd5b813560206001600160401b0382111562001472576200147262001b86565b8160051b6200148382820162001ab3565b8381528281019086840183880185018910156200149e578687fd5b8693505b85841015620014cd578035620014b88162001b9c565b835260019390930192918401918401620014a2565b50979650505050505050565b8035600281900b8114620014ec57600080fd5b919050565b803562ffffff81168114620014ec57600080fd5b60006020828403121562001517578081fd5b8135620015248162001b9c565b9392505050565b6000602082840312156200153d578081fd5b8151620015248162001b9c565b600080604083850312156200155d578081fd5b82356200156a8162001b9c565b915060208301356200157c8162001b9c565b809150509250929050565b600080600080608085870312156200159d578182fd5b8435620015aa8162001b9c565b93506020850135620015bc8162001b9c565b92506040850135620015ce8162001b9c565b9150620015de60608601620014f1565b905092959194509250565b60008060008060008060c0878903121562001602578182fd5b86356200160f8162001b9c565b95506020870135620016218162001b9c565b94506200163160408801620014f1565b9350606087013561ffff8116811462001648578283fd5b92506200165860808801620014d9565b91506200166860a08801620014d9565b90509295509295509295565b60006020828403121562001686578081fd5b81356001600160401b038111156200169c578182fd5b620016aa8482850162001443565b949350505050565b60008060408385031215620016c5578182fd5b82356001600160401b03811115620016db578283fd5b620016e98582860162001443565b92505060208301356200157c8162001b9c565b60008060006040848603121562001711578283fd5b83356001600160401b038082111562001728578485fd5b620017368783880162001443565b945060208601359150808211156200174c578384fd5b818601915086601f83011262001760578384fd5b8135818111156200176f578485fd5b8760208260051b850101111562001784578485fd5b6020830194508093505050509250925092565b600060208284031215620017a9578081fd5b81516001600160401b0380821115620017c0578283fd5b818401915084601f830112620017d4578283fd5b815181811115620017e957620017e962001b86565b620017fe601f8201601f191660200162001ab3565b915080825285602082850101111562001815578384fd5b620013f281602084016020860162001b23565b606094851b6001600160601b0319908116825293851b841660148201529190931b909116602882015260e89190911b6001600160e81b031916603c820152603f0190565b600087516020620018818285838d0162001b23565b885191840191620018968184848d0162001b23565b8851920191620018aa8184848c0162001b23565b8751920191620018be8184848b0162001b23565b8651920191620018d28184848a0162001b23565b8551920191620018e6818484890162001b23565b919091019998505050505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039290921682521515602082015260400190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b60e08152600087518060e0840152610100620019a38282860160208d0162001b23565b601f91909101601f191683018381038201602085015260059181019190915264472d554e4960d81b6101208201526001600160a01b038816604084015261ffff8716606084015261014001905062001a00608083018660020b9052565b62001a1060a083018560020b9052565b6001600160a01b03831660c0830152979650505050505050565b60208082526022908201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206d616e616760408201526132b960f11b606082015260800190565b6000808335601e1984360301811262001a83578283fd5b8301803591506001600160401b0382111562001a9d578283fd5b6020019150368190038213156200049357600080fd5b604051601f8201601f191681016001600160401b038111828210171562001ade5762001ade62001b86565b604052919050565b6000821982111562001afc5762001afc62001b70565b500190565b600081600019048311821515161562001b1e5762001b1e62001b70565b500290565b60005b8381101562001b4057818101518382015260200162001b26565b83811115620006fa5750506000910152565b600060001982141562001b695762001b6962001b70565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811462001bb257600080fd5b5056fe608060408181526001620b8e4360e01b031982526000918291339163fff471bd9160849160048186803b15801561003557600080fd5b505afa158015610049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061006d9190610207565b9150915061009081604051806020016040528060008152506100a060201b60201c565b6100998261017c565b5050610272565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a3815115610177576000836001600160a01b0316836040516101219190610239565b600060405180830381855af49150503d806000811461015c576040519150601f19603f3d011682016040523d82523d6000602084013e610161565b606091505b5050905080610175573d806000803e806000fd5b505b505050565b60006101946000805160206109298339815191525490565b90508160008051602061092983398151915255816001600160a01b0316816001600160a01b03167fdf435d422321da6b195902d70fc417c06a32f88379c20dd8f2a8da07088cec2960405160405180910390a35050565b80516001600160a01b038116811461020257600080fd5b919050565b60008060408385031215610219578182fd5b610222836101eb565b9150610230602084016101eb565b90509250929050565b60008251815b81811015610259576020818601810151858301520161023f565b818111156102675782828501525b509190910192915050565b6106a8806102816000396000f3fe60806040526004361061004e5760003560e01c806301ffc9a71461009b5780633659cfe6146100d05780633e47158c146100f05780634f1ef2861461011d5780638356ca4f1461013057610091565b366100915760405162461bcd60e51b815260206004820152600e60248201526d115512115497d491529150d5115160921b60448201526064015b60405180910390fd5b610099610150565b005b3480156100a757600080fd5b506100bb6100b63660046105a9565b610189565b60405190151581526020015b60405180910390f35b3480156100dc57600080fd5b506100996100eb3660046104f2565b61027e565b3480156100fc57600080fd5b506101056102d2565b6040516001600160a01b0390911681526020016100c7565b61009961012b36600461050c565b6102e1565b34801561013c57600080fd5b5061009961014b3660046104f2565b61035e565b6000805160206106538339815191525460003681823780813683855af491503d8082833e82801561017f578183f35b8183fd5b50505050565b60006301ffc9a760e01b6001600160e01b0319831614806101ba57506307f5828d60e41b6001600160e01b03198316145b156101c757506001919050565b6001600160e01b031980831614156101e157506000919050565b600080516020610653833981519152546040516301ffc9a760e01b81526001600160e01b0319841660048201526001600160a01b038216906301ffc9a79060240160206040518083038186803b15801561023a57600080fd5b505afa92505050801561026a575060408051601f3d908101601f1916820190925261026791810190610589565b60015b6102775750600092915050565b9392505050565b61028661039f565b6001600160a01b0316336001600160a01b0316146102b65760405162461bcd60e51b81526004016100889061060a565b6102cf81604051806020016040528060008152506103b2565b50565b60006102dc61039f565b905090565b6102e961039f565b6001600160a01b0316336001600160a01b0316146103195760405162461bcd60e51b81526004016100889061060a565b6103598383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103b292505050565b505050565b61036661039f565b6001600160a01b0316336001600160a01b0316146103965760405162461bcd60e51b81526004016100889061060a565b6102cf81610475565b6000805160206106338339815191525490565b6000805160206106538339815191528054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a3815115610359576000836001600160a01b03168360405161042191906105d1565b600060405180830381855af49150503d806000811461045c576040519150601f19603f3d011682016040523d82523d6000602084013e610461565b606091505b5050905080610183573d806000803e806000fd5b600061047f61039f565b90508160008051602061063383398151915255816001600160a01b0316816001600160a01b03167fdf435d422321da6b195902d70fc417c06a32f88379c20dd8f2a8da07088cec2960405160405180910390a35050565b80356001600160a01b03811681146104ed57600080fd5b919050565b600060208284031215610503578081fd5b610277826104d6565b600080600060408486031215610520578182fd5b610529846104d6565b925060208401356001600160401b0380821115610544578384fd5b818601915086601f830112610557578384fd5b813581811115610565578485fd5b876020828501011115610576578485fd5b6020830194508093505050509250925092565b60006020828403121561059a578081fd5b81518015158114610277578182fd5b6000602082840312156105ba578081fd5b81356001600160e01b031981168114610277578182fd5b60008251815b818110156105f157602081860181015185830152016105d7565b818111156105ff5782828501525b509190910192915050565b6020808252600e908201526d1393d517d055551213d49256915160921b60408201526060019056feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220bcae224119d3a953053eb9e09f9650c7828dcfa2fa8f222ddd08ed0191efd1e764736f6c63430008040033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038d89620c30bb3137d45ecf4db396e64d87561df259822f77049058328ada3af68be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122097b5f4082e262df38fdd4ad067579cedd40119549304dd93a8ef4316a19e4e2e64736f6c63430008040033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001295760003560e01c8062599e65146200012e5780630be63aac146200015e5780630dfc574b1462000177578063173f4c30146200018e57806334862b6a14620001a55780633522826414620001be57806340aee04114620001e4578063479dbe1d14620001fb578063481c6a751462000212578063483248ca146200021c578063485cc955146200023357806350dcf827146200024a578063715018a6146200028157806395d807f1146200028b5780639a94775d14620002a2578063a58f121914620002c8578063c45a015514620002df578063cefa77991462000307578063d5f39488146200031b578063d6f748981462000343578063f2fde38b146200035a578063fff471bd1462000371575b600080fd5b620001456200013f3660046200154a565b6200038a565b604051620001559291906200190b565b60405180910390f35b620001756200016f366004620016b2565b6200049a565b005b6200017562000188366004620016fc565b62000580565b620001756200019f36600462001505565b62000700565b620001af62000783565b60405190815260200162000155565b620001d5620001cf36600462001587565b620007b2565b604051620001559190620018f7565b62000175620001f536600462001674565b6200088f565b620001756200020c36600462001505565b6200097d565b620001d5620009fd565b620001d56200022d366004620015e9565b62000a0c565b62000175620002443660046200154a565b62000e1d565b620002706200025b36600462001505565b60056020526000908152604090205460ff1681565b604051901515815260200162000155565b6200017562000f83565b620002706200029c36600462001505565b62000ff0565b62000270620002b336600462001505565b60046020526000908152604090205460ff1681565b620001d5620002d936600462001505565b6200100d565b620001d57f000000000000000000000000000000000000000000000000000000000000000081565b600354620001d5906001600160a01b031681565b620001d57f000000000000000000000000000000000000000000000000000000000000000081565b620001756200035436600462001505565b6200108a565b620001756200036b36600462001505565b62001129565b6001546002546001600160a01b03918216911662000145565b600080826001600160a01b0316846001600160a01b03161415620004005760405162461bcd60e51b815260206004820152602260248201527f47556e69466163746f72792e637265617465506f6f6c3a2073616d6520746f6b60448201526132b760f11b60648201526084015b60405180910390fd5b826001600160a01b0316846001600160a01b0316106200042257828462000425565b83835b90925090506001600160a01b038216620004935760405162461bcd60e51b815260206004820152602860248201527f47556e69466163746f72792e637265617465506f6f6c3a206e6f742061646472604482015267657373207a65726f60c01b6064820152608401620003f7565b9250929050565b33620004a5620009fd565b6001600160a01b031614620004ce5760405162461bcd60e51b8152600401620003f79062001a2a565b60005b82518110156200057b57828181518110620004fc57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316638356ca4f836040518263ffffffff1660e01b8152600401620005319190620018f7565b600060405180830381600087803b1580156200054c57600080fd5b505af115801562000561573d6000803e3d6000fd5b505050508080620005729062001b52565b915050620004d1565b505050565b336200058b620009fd565b6001600160a01b031614620005b45760405162461bcd60e51b8152600401620003f79062001a2a565b82518114620006015760405162461bcd60e51b81526020600482015260186024820152770dad2e6dac2e8c6d0d2dcce40c2e4e4c2f240d8cadccee8d60431b6044820152606401620003f7565b60005b8351811015620006fa578381815181106200062f57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316634f1ef286600360009054906101000a90046001600160a01b03168585858181106200067c57634e487b7160e01b600052603260045260246000fd5b905060200281019062000690919062001a6c565b6040518463ffffffff1660e01b8152600401620006b09392919062001940565b600060405180830381600087803b158015620006cb57600080fd5b505af1158015620006e0573d6000803e3d6000fd5b505050508080620006f19062001b52565b91505062000604565b50505050565b336200070b620009fd565b6001600160a01b031614620007345760405162461bcd60e51b8152600401620003f79062001a2a565b600080516020620024ff8339815191528160016040516200075792919062001925565b60405180910390a16001600160a01b03166000908152600560205260409020805460ff19166001179055565b604051620007946020820162001435565b6020820181038252601f19601f820116604052508051906020012081565b6000806000620007c386866200038a565b9150915060ff60f81b3088848488604051602001620007e6949392919062001828565b60405160208183030381529060405280519060200120604051806020016200080e9062001435565b6020820181038252601f19601f82011660405250805190602001206040516020016200086c94939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051601f198184030181529190528051602090910120979650505050505050565b336200089a620009fd565b6001600160a01b031614620008c35760405162461bcd60e51b8152600401620003f79062001a2a565b60005b81518110156200097957818181518110620008f157634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600354604051631b2ce7f360e11b81526001600160a01b0392831692633659cfe6926200092f92911690600401620018f7565b600060405180830381600087803b1580156200094a57600080fd5b505af11580156200095f573d6000803e3d6000fd5b505050508080620009709062001b52565b915050620008c6565b5050565b3362000988620009fd565b6001600160a01b031614620009b15760405162461bcd60e51b8152600401620003f79062001a2a565b600080516020620024ff833981519152816000604051620009d492919062001925565b60405180910390a16001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b031690565b600080600062000a1d89896200038a565b604080518082018252308082526003546001600160a01b03166020928301819052600180546001600160a01b0319908116909317905560028054909216179055905192945090925062000a79913391859185918c910162001828565b6040516020818303038152906040528051906020012060405162000a9d9062001435565b8190604051809103906000f590508015801562000abe573d6000803e3d6000fd5b5092506000604051806040016040528060018152602001603f60f81b81525090506000604051806040016040528060018152602001603f60f81b8152509050836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562000b3757600080fd5b505afa92505050801562000b6f57506040513d6000823e601f3d908101601f1916820160405262000b6c919081019062001797565b60015b62000b7a5762000b7d565b91505b826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562000bb757600080fd5b505afa92505050801562000bef57506040513d6000823e601f3d908101601f1916820160405262000bec919081019062001797565b60015b62000bfa5762000bfd565b90505b600062000c7a60405180604001604052806012815260200171023b2b630ba37902ab734b9bbb0b8102b19960751b81525084604051806040016040528060018152602001602f60f81b815250856040518060400160405280600681526020016504098a04060f60d31b81525062000c743362001210565b620013fb565b604051630b4c774160e11b81526001600160a01b038781166004830152868116602483015262ffffff8d1660448301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690631698ee829060640160206040518083038186803b15801562000cf557600080fd5b505afa15801562000d0a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d3091906200152b565b60405163e25e15e360e01b81529091506001600160a01b0388169063e25e15e39062000d6b90859085908f908f908f90339060040162001980565b600060405180830381600087803b15801562000d8657600080fd5b505af115801562000d9b573d6000803e3d6000fd5b5050600180546001600160a01b0319908116825560028054909116905533600081815260046020526040808220805460ff191690941790935591516001600160a01b038c81169550919350908516917f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b91a45050505050509695505050505050565b600054600160a81b900460ff168062000e405750600054600160a01b900460ff16155b62000ea55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620003f7565b600054600160a81b900460ff1615801562000ed0576000805461ffff60a01b191661010160a01b1790555b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000f3a5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903232b83637bcb2b960991b6044820152606401620003f7565b600380546001600160a01b038086166001600160a01b031992831617909255600080549285169290911691909117905580156200057b576000805460ff60a81b19169055505050565b3362000f8e620009fd565b6001600160a01b03161462000fb75760405162461bcd60e51b8152600401620003f79062001a2a565b600080546040516001600160a01b03909116906000805160206200251f833981519152908390a3600080546001600160a01b0319169055565b600062000ffd826200100d565b6001600160a01b03161592915050565b6000816001600160a01b0316633e47158c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200104957600080fd5b505afa1580156200105e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200108491906200152b565b92915050565b3362001095620009fd565b6001600160a01b031614620010be5760405162461bcd60e51b8152600401620003f79062001a2a565b6003546040517f0617fd31aa5ab95ec80eefc1eb61a2c477aa419d1d761b4e46f5f077e47852aa91620010ff916001600160a01b039091169084906200190b565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b3362001134620009fd565b6001600160a01b0316146200115d5760405162461bcd60e51b8152600401620003f79062001a2a565b6001600160a01b038116620011c65760405162461bcd60e51b815260206004820152602860248201527f4f776e61626c653a206e6577206d616e6167657220697320746865207a65726f604482015267206164647265737360c01b6064820152608401620003f7565b600080546040516001600160a01b03808516939216916000805160206200251f83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b6020820152815160068082528184019093526060926001600160a01b038516929160009160208201818036833701905050905060005b6003811015620013f257826004856200128284600c62001ae6565b60208110620012a157634e487b7160e01b600052603260045260246000fd5b1a60f81b6001600160f81b031916901c60f81c60ff1681518110620012d657634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191682620012f383600262001b01565b815181106200131257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535082846200133883600c62001ae6565b602081106200135757634e487b7160e01b600052603260045260246000fd5b825191901a600f169081106200137d57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b031916826200139a83600262001b01565b620013a790600162001ae6565b81518110620013c657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535080620013e98162001b52565b91505062001267565b50949350505050565b60608686868686866040516020016200141a969594939291906200186c565b60405160208183030381529060405290509695505050505050565b6109498062001bb683390190565b600082601f83011262001454578081fd5b813560206001600160401b0382111562001472576200147262001b86565b8160051b6200148382820162001ab3565b8381528281019086840183880185018910156200149e578687fd5b8693505b85841015620014cd578035620014b88162001b9c565b835260019390930192918401918401620014a2565b50979650505050505050565b8035600281900b8114620014ec57600080fd5b919050565b803562ffffff81168114620014ec57600080fd5b60006020828403121562001517578081fd5b8135620015248162001b9c565b9392505050565b6000602082840312156200153d578081fd5b8151620015248162001b9c565b600080604083850312156200155d578081fd5b82356200156a8162001b9c565b915060208301356200157c8162001b9c565b809150509250929050565b600080600080608085870312156200159d578182fd5b8435620015aa8162001b9c565b93506020850135620015bc8162001b9c565b92506040850135620015ce8162001b9c565b9150620015de60608601620014f1565b905092959194509250565b60008060008060008060c0878903121562001602578182fd5b86356200160f8162001b9c565b95506020870135620016218162001b9c565b94506200163160408801620014f1565b9350606087013561ffff8116811462001648578283fd5b92506200165860808801620014d9565b91506200166860a08801620014d9565b90509295509295509295565b60006020828403121562001686578081fd5b81356001600160401b038111156200169c578182fd5b620016aa8482850162001443565b949350505050565b60008060408385031215620016c5578182fd5b82356001600160401b03811115620016db578283fd5b620016e98582860162001443565b92505060208301356200157c8162001b9c565b60008060006040848603121562001711578283fd5b83356001600160401b038082111562001728578485fd5b620017368783880162001443565b945060208601359150808211156200174c578384fd5b818601915086601f83011262001760578384fd5b8135818111156200176f578485fd5b8760208260051b850101111562001784578485fd5b6020830194508093505050509250925092565b600060208284031215620017a9578081fd5b81516001600160401b0380821115620017c0578283fd5b818401915084601f830112620017d4578283fd5b815181811115620017e957620017e962001b86565b620017fe601f8201601f191660200162001ab3565b915080825285602082850101111562001815578384fd5b620013f281602084016020860162001b23565b606094851b6001600160601b0319908116825293851b841660148201529190931b909116602882015260e89190911b6001600160e81b031916603c820152603f0190565b600087516020620018818285838d0162001b23565b885191840191620018968184848d0162001b23565b8851920191620018aa8184848c0162001b23565b8751920191620018be8184848b0162001b23565b8651920191620018d28184848a0162001b23565b8551920191620018e6818484890162001b23565b919091019998505050505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039290921682521515602082015260400190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b60e08152600087518060e0840152610100620019a38282860160208d0162001b23565b601f91909101601f191683018381038201602085015260059181019190915264472d554e4960d81b6101208201526001600160a01b038816604084015261ffff8716606084015261014001905062001a00608083018660020b9052565b62001a1060a083018560020b9052565b6001600160a01b03831660c0830152979650505050505050565b60208082526022908201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206d616e616760408201526132b960f11b606082015260800190565b6000808335601e1984360301811262001a83578283fd5b8301803591506001600160401b0382111562001a9d578283fd5b6020019150368190038213156200049357600080fd5b604051601f8201601f191681016001600160401b038111828210171562001ade5762001ade62001b86565b604052919050565b6000821982111562001afc5762001afc62001b70565b500190565b600081600019048311821515161562001b1e5762001b1e62001b70565b500290565b60005b8381101562001b4057818101518382015260200162001b26565b83811115620006fa5750506000910152565b600060001982141562001b695762001b6962001b70565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811462001bb257600080fd5b5056fe608060408181526001620b8e4360e01b031982526000918291339163fff471bd9160849160048186803b15801561003557600080fd5b505afa158015610049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061006d9190610207565b9150915061009081604051806020016040528060008152506100a060201b60201c565b6100998261017c565b5050610272565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a3815115610177576000836001600160a01b0316836040516101219190610239565b600060405180830381855af49150503d806000811461015c576040519150601f19603f3d011682016040523d82523d6000602084013e610161565b606091505b5050905080610175573d806000803e806000fd5b505b505050565b60006101946000805160206109298339815191525490565b90508160008051602061092983398151915255816001600160a01b0316816001600160a01b03167fdf435d422321da6b195902d70fc417c06a32f88379c20dd8f2a8da07088cec2960405160405180910390a35050565b80516001600160a01b038116811461020257600080fd5b919050565b60008060408385031215610219578182fd5b610222836101eb565b9150610230602084016101eb565b90509250929050565b60008251815b81811015610259576020818601810151858301520161023f565b818111156102675782828501525b509190910192915050565b6106a8806102816000396000f3fe60806040526004361061004e5760003560e01c806301ffc9a71461009b5780633659cfe6146100d05780633e47158c146100f05780634f1ef2861461011d5780638356ca4f1461013057610091565b366100915760405162461bcd60e51b815260206004820152600e60248201526d115512115497d491529150d5115160921b60448201526064015b60405180910390fd5b610099610150565b005b3480156100a757600080fd5b506100bb6100b63660046105a9565b610189565b60405190151581526020015b60405180910390f35b3480156100dc57600080fd5b506100996100eb3660046104f2565b61027e565b3480156100fc57600080fd5b506101056102d2565b6040516001600160a01b0390911681526020016100c7565b61009961012b36600461050c565b6102e1565b34801561013c57600080fd5b5061009961014b3660046104f2565b61035e565b6000805160206106538339815191525460003681823780813683855af491503d8082833e82801561017f578183f35b8183fd5b50505050565b60006301ffc9a760e01b6001600160e01b0319831614806101ba57506307f5828d60e41b6001600160e01b03198316145b156101c757506001919050565b6001600160e01b031980831614156101e157506000919050565b600080516020610653833981519152546040516301ffc9a760e01b81526001600160e01b0319841660048201526001600160a01b038216906301ffc9a79060240160206040518083038186803b15801561023a57600080fd5b505afa92505050801561026a575060408051601f3d908101601f1916820190925261026791810190610589565b60015b6102775750600092915050565b9392505050565b61028661039f565b6001600160a01b0316336001600160a01b0316146102b65760405162461bcd60e51b81526004016100889061060a565b6102cf81604051806020016040528060008152506103b2565b50565b60006102dc61039f565b905090565b6102e961039f565b6001600160a01b0316336001600160a01b0316146103195760405162461bcd60e51b81526004016100889061060a565b6103598383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103b292505050565b505050565b61036661039f565b6001600160a01b0316336001600160a01b0316146103965760405162461bcd60e51b81526004016100889061060a565b6102cf81610475565b6000805160206106338339815191525490565b6000805160206106538339815191528054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a3815115610359576000836001600160a01b03168360405161042191906105d1565b600060405180830381855af49150503d806000811461045c576040519150601f19603f3d011682016040523d82523d6000602084013e610461565b606091505b5050905080610183573d806000803e806000fd5b600061047f61039f565b90508160008051602061063383398151915255816001600160a01b0316816001600160a01b03167fdf435d422321da6b195902d70fc417c06a32f88379c20dd8f2a8da07088cec2960405160405180910390a35050565b80356001600160a01b03811681146104ed57600080fd5b919050565b600060208284031215610503578081fd5b610277826104d6565b600080600060408486031215610520578182fd5b610529846104d6565b925060208401356001600160401b0380821115610544578384fd5b818601915086601f830112610557578384fd5b813581811115610565578485fd5b876020828501011115610576578485fd5b6020830194508093505050509250925092565b60006020828403121561059a578081fd5b81518015158114610277578182fd5b6000602082840312156105ba578081fd5b81356001600160e01b031981168114610277578182fd5b60008251815b818110156105f157602081860181015185830152016105d7565b818111156105ff5782828501525b509190910192915050565b6020808252600e908201526d1393d517d055551213d49256915160921b60408201526060019056feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220bcae224119d3a953053eb9e09f9650c7828dcfa2fa8f222ddd08ed0191efd1e764736f6c63430008040033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038d89620c30bb3137d45ecf4db396e64d87561df259822f77049058328ada3af68be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122097b5f4082e262df38fdd4ad067579cedd40119549304dd93a8ef4316a19e4e2e64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "manager()": {
        "details": "Returns the address of the current manager."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without manager. It will not be possible to call `onlyManager` functions anymore. Can only be called by the current manager. NOTE: Renouncing ownership will leave the contract without an manager, thereby removing any functionality that is only available to the manager."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current manager."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5575,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_manager",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 791,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 794,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5005,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_constructorParams",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(ConstructorParams)5002_storage"
      },
      {
        "astId": 5012,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "poolImplementation",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 5016,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "isPoolCreator",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5020,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "isVerifiedCreator",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(ConstructorParams)5002_storage": {
        "encoding": "inplace",
        "label": "struct GUniFactoryStorage.ConstructorParams",
        "members": [
          {
            "astId": 4999,
            "contract": "contracts/GUniFactory.sol:GUniFactory",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5001,
            "contract": "contracts/GUniFactory.sol:GUniFactory",
            "label": "implementation",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}
